groups:
  - name: hdfs_info
    rules:
      # Alert for any instance that has a median request latency > 1s.
    - alert: APIHighRequestLatency
      expr: api_http_request_latencies_second{quantile="0.5"} > 1
      for: 10m
      labels:
        severity: info
        service: hdfs
      annotations:
        summary: "High request latency on {{ $labels.instance }}"
        description: "{{ $labels.instance }} has a median request latency above 1s (current value: {{ $value }}s)"

  - name: hdfs_warning
    rules:
    - alert: CapacityRemainingGB
      expr: sum by (service_name,task_name) ({__name__=~".*_FSNamesystem_CapacityRemainingGB"}) < 10
      for: 10m
      labels:
       severity: warning
       service: hdfs
      annotations:
       summary: "Low capacity remaining in GB on {{ $labels.instance }} for {{ $labels.service_name }} / {{ $labels.task_name }}"
       description: "{{ $labels.instance }} / {{ $labels.service_name }} / {{ $labels.task_name }} has capacity remaining {{ $value }}GB"

    - alert: MissingBlocks
      expr: sum by(service_name,task_name) (rate({__name__=~".*_dfs_FSNamesystem_MissingBlocks"}[10m])) > 0
      labels:
        severity: warning
        service: hdfs
      annotations:
       summary: "Missing blocks on {{ $labels.instance }} for {{ $labels.service_name }} / {{ $labels.task_name }}"
       description: "{{ $labels.instance }} / {{ $labels.service_name }} / {{ $labels.task_name }} missed blocks equals to {{ $value }}"

    - alert: UnderReplicatedBlocks
      expr: sum by(service_name,task_name) (rate({__name__=~".*_dfs_FSNamesystem_UnderReplicatedBlocks"}[10m])) > 0
      labels:
        severity: warning
        service: hdfs
      annotations:
       summary: "Under replicated blocks on {{ $labels.instance }} for {{ $labels.service_name }} / {{ $labels.task_name }}"
       description: "{{ $labels.instance }} / {{ $labels.service_name }} / {{ $labels.task_name }} has under replicated blocks equals to {{ $value }}"

    - alert: NumStaleDataNodes
      expr: sum by(service_name,task_name) (rate({__name__=~".*_dfs_FSNamesystem_StaleDataNodes"}[10m])) > 0
      labels:
        severity: warning
        service: hdfs
      annotations:
       summary: "Number of stale DataNodes on {{ $labels.instance }} for {{ $labels.service_name }} / {{ $labels.task_name }}"
       description: "{{ $labels.instance }} / {{ $labels.service_name }} / {{ $labels.task_name }} has number stale DataNodes equals to {{ $value }}"

    - alert: MemHeapUsed
      expr: (sum({__name__=~".*_jvm_JvmMetrics_MemHeapMaxM"}) / sum({__name__=~".*_jvm_JvmMetrics_MemHeapUsedM"})) < 0.8
      for: 10m
      labels:
        severity: warning
        service: hdfs
      annotations:
       summary: "Total service memory heap in use for {{ $labels.instance }}"
       description: "Total memory heap usage is greater than 80%. Consider increasing memory of the HDFS cluster"

  - name: hdfs_critical
    rules:

    - alert: NumInactiveSources
      expr: (sum({__name__=~".*metricssystem_MetricsSystem_NumAllSources"}) - sum({__name__=~".*metricssystem_MetricsSystem_NumActiveSources"})) > 0
      for: 5m
      labels:
        severity: critical
        service: hdfs
      annotations:
       summary: "Number of inactive sources for {{ $labels.instance }}"
       description: "{{ $labels.instance }} has number of inactive sources greater then 0 (current value: {{ $value }})"

    - alert: VolumeFailures
      expr: sum by (service_name,task_name) ({__name__=~".*_dfs_datanode_VolumeFailures"}) > 0
      for: 5m
      labels:
        severity: critical
        service: hdfs
      annotations:
       summary: "VolumeFailures on {{ $labels.instance }} for {{ $labels.service_name }} / {{ $labels.task_name }}"
       description: "{{ $labels.instance }} / {{ $labels.service_name }} / {{ $labels.task_name }} has volume failure equals to {{ $value }}"

